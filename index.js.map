{"version":3,"file":"index.js","mappings":"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","sources":["webpack://chartjs-plugin-stacked100/./node_modules/@kurkle/color/dist/color.esm.js","webpack://chartjs-plugin-stacked100/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://chartjs-plugin-stacked100/./node_modules/chart.js/dist/chart.js","webpack://chartjs-plugin-stacked100/./src/utils.ts","webpack://chartjs-plugin-stacked100/./src/plugin.ts","webpack://chartjs-plugin-stacked100/./src/index.ts","webpack://chartjs-plugin-stacked100/./examples/demo/index.ts"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.6\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.6\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.6\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { ParsingOptions } from \"chart.js\";\nimport { ExtendedChartData, PluginOptions } from \"./types\";\n\nexport const isObject = (obj: any): obj is Record<string, any> => {\n  const type = typeof obj;\n  return type === \"object\" && !!obj;\n};\n\nconst getAxisKey = (parsing: ParsingOptions[\"parsing\"], defaultKey: \"x\" | \"y\") => {\n  return (parsing && parsing[`${defaultKey}AxisKey`]) || defaultKey;\n};\n\nexport const dataValue = (\n  dataPoint: any,\n  isHorizontal: boolean,\n  parsing: ParsingOptions[\"parsing\"],\n) => {\n  if (isObject(dataPoint)) {\n    const axisKey = getAxisKey(parsing, isHorizontal ? \"x\" : \"y\");\n    return dataPoint[axisKey];\n  }\n\n  return dataPoint;\n};\n\nconst cloneArray = <T>(srcAry: T[]): T[] => {\n  return [...srcAry];\n};\n\nexport const setOriginalData = (data: ExtendedChartData) => {\n  data.originalData = data.datasets.map((dataset) => {\n    return cloneArray(dataset.data);\n  });\n};\n\nexport const roundOff = (value: number, precision: number): number => {\n  const multiplicator = Math.pow(10, precision);\n  return Math.round(value * 100 * multiplicator) / multiplicator;\n};\n\nexport const roundDown = (value: number, precision: number): number => {\n  const multiplicator = Math.pow(10, precision);\n  return Math.floor(value * 100 * multiplicator) / multiplicator;\n};\n\nexport const roundUp = (value: number, precision: number): number => {\n  const multiplicator = Math.pow(10, precision);\n  return Math.ceil(value * 100 * multiplicator) / multiplicator;\n};\n\nexport const getPrecision = (pluginOptions: PluginOptions): number => {\n  // return the (validated) configured precision from pluginOptions or default 1\n  const defaultPrecision = 1;\n  if (!(\"precision\" in pluginOptions)) return defaultPrecision;\n  if (typeof pluginOptions.precision !== \"number\") return defaultPrecision;\n  const optionsPrecision = Math.floor(pluginOptions.precision);\n  if (optionsPrecision < 0 || optionsPrecision > 16) return defaultPrecision;\n  return optionsPrecision;\n};\n","import {\n  Chart,\n  ChartType,\n  TooltipCallbacks,\n  TooltipItem,\n  ChartData,\n  ParsingOptions,\n} from \"chart.js\";\n\nimport {\n  dataValue,\n  setOriginalData,\n  roundOff,\n  roundDown,\n  roundUp,\n  getPrecision,\n  isObject,\n} from \"./utils\";\nimport { ExtendedChartData, ExtendedPlugin } from \"./types\";\n\nexport const defaultStackKey = Symbol();\n\nconst getDataIndex = (\n  labels: unknown[],\n  data: unknown,\n  parsing: ParsingOptions[\"parsing\"],\n  isHorizontal: boolean,\n  srcIndex: number,\n) => {\n  if (!isObject(data)) return srcIndex;\n\n  const axis = isHorizontal ? \"y\" : \"x\";\n  const parseKey = parsing && parsing[`${axis}AxisKey`];\n  if (!parseKey) return srcIndex;\n  const label = data[parseKey];\n  if (!label) return srcIndex;\n  const labelIndex = labels.findIndex((l) => l === label);\n\n  return labelIndex < 0 ? srcIndex : labelIndex;\n};\n\nexport const summarizeValues = (\n  chartData: ChartData,\n  visibles: number[],\n  isHorizontal: boolean,\n  individual: boolean,\n  targetAxisId?: string,\n  parsing?: ParsingOptions[\"parsing\"],\n) => {\n  const { labels, datasets } = chartData;\n  const datasetDataLength = labels.length;\n\n  const isStack = datasets?.[0]?.stack;\n  const values = [...new Array(datasetDataLength)].map((el, i) => {\n    return datasets\n      .filter((dataset) => isTargetDataset(dataset, targetAxisId))\n      .reduce((sum, dataset, j) => {\n        const parsingOptions = dataset.parsing || parsing;\n        const key = dataset.stack || defaultStackKey;\n        const rec = dataset.data.find((ds, index) => {\n          return getDataIndex(labels, ds, parsingOptions, isHorizontal, index) == i;\n        });\n        if (!sum[key]) sum[key] = 0;\n        const value = Math.abs(dataValue(rec, isHorizontal, parsingOptions) || 0) * visibles[j];\n        if (individual && !isStack) {\n          if (sum[key] < value) sum[key] = value;\n        } else {\n          sum[key] += value;\n        }\n\n        return sum;\n      }, {} as { [key: string | symbol]: number });\n  });\n\n  if (!isStack || !individual) return values;\n  return values.map((rec) => {\n    const maxVal = Math.max(...(Object.values(rec) as number[]));\n    Object.keys(rec).forEach((key) => (rec[key] = maxVal));\n    return rec;\n  });\n};\n\nconst isTargetDataset = (dataset: ChartData[\"datasets\"][0], targetAxisId?: string) => {\n  if (!targetAxisId) return true;\n\n  // FIXME: avoid type error without any cast.\n  const axisId = (dataset as any).xAxisID || (dataset as any).yAxisID;\n  return axisId === targetAxisId;\n};\n\nconst calculateRate = (\n  data: ExtendedChartData,\n  visibles: number[],\n  isHorizontal: boolean,\n  precision: number,\n  individual: boolean,\n  roundOption: \"off\" | \"down\" | \"up\" = \"off\",\n  targetAxisId?: string,\n  parsing?: ParsingOptions[\"parsing\"],\n) => {\n  const totals = summarizeValues(data, visibles, isHorizontal, individual, targetAxisId, parsing);\n\n  const round =\n    roundOption === \"off\"\n      ? roundOff\n      : roundOption === \"down\"\n        ? roundDown\n        : roundUp;\n\n  return data.datasets.map((dataset) => {\n    const isTarget = isTargetDataset(dataset, targetAxisId);\n\n    const ret = new Array(data.labels.length);\n    dataset.data.forEach((val, j) => {\n      const parsingOptions = dataset.parsing || parsing;\n      const dv = dataValue(val, isHorizontal, parsingOptions);\n      const dataIndex = getDataIndex(data.labels, val, parsingOptions, isHorizontal, j);\n      if (isTarget) {\n        const key = dataset.stack || defaultStackKey;\n        const total = totals[dataIndex][key];\n\n        ret[dataIndex] = dv && total ? round(dv / total, precision) : 0;\n      } else {\n        ret[dataIndex] = dv;\n      }\n    });\n    return ret;\n  });\n};\n\nconst tooltipLabel = (\n  isHorizontal: boolean,\n  targetAxisId?: string,\n): TooltipCallbacks<ChartType>[\"label\"] => {\n  return (tooltipItem: TooltipItem<ChartType>) => {\n    const data = tooltipItem.chart.data;\n    const datasetIndex = tooltipItem.datasetIndex;\n    const index = tooltipItem.dataIndex;\n    const datasetLabel = data.datasets[datasetIndex].label || \"\";\n    const parsing = data.datasets[datasetIndex].parsing || tooltipItem.chart.options.parsing;\n    const originalValue = data.originalData[datasetIndex].find(\n      (rec, i) => getDataIndex(data.labels, rec, parsing, isHorizontal, i) == index,\n    );\n    const rateValue = data.calculatedData[datasetIndex][index];\n    const value = dataValue(originalValue, isHorizontal, parsing);\n\n    if (!isTargetDataset(data.datasets[datasetIndex], targetAxisId)) {\n      return `${datasetLabel}: ${rateValue}`;\n    }\n    return `${datasetLabel}: ${rateValue}% (${value})`;\n  };\n};\n\nconst reflectData = (srcData: any[], datasets: ExtendedChartData[\"datasets\"]) => {\n  if (!srcData) return;\n\n  srcData.forEach((data, i) => {\n    datasets[i].data = data;\n  });\n};\n\nconst isHorizontalChart = (chartInstance: Chart) => {\n  return chartInstance.options.indexAxis === \"y\";\n};\n\nconst getTickOption = (hasNegative: boolean, fixNegativeScale: boolean) => {\n  const baseOption = { max: 100 };\n  if (!hasNegative) return { min: 0, ...baseOption };\n  if (fixNegativeScale) return { min: -100, ...baseOption };\n  return baseOption;\n};\n\nconst setScaleOption = (\n  chartInstance: Chart,\n  axisId: string,\n  stacked: boolean,\n  tickOption: Record<string, any>,\n) => {\n  const scaleOption = {\n    stacked,\n    ...tickOption,\n    ...chartInstance.options.scales[axisId],\n  };\n  chartInstance.options.scales[axisId] = scaleOption;\n};\n\nexport const beforeInit: ExtendedPlugin[\"beforeInit\"] = (chartInstance, args, pluginOptions) => {\n  if (!pluginOptions.enable) return;\n  const { replaceTooltipLabel = true, fixNegativeScale = true, individual = false } = pluginOptions;\n\n  const isHorizontal = isHorizontalChart(chartInstance);\n  const targetAxis = isHorizontal ? \"x\" : \"y\";\n  const hasNegative = chartInstance.data.datasets.some((dataset) => {\n    return dataset.data.some(\n      (value) =>\n        (dataValue(value, isHorizontal, dataset.parsing || chartInstance.options.parsing) || 0) < 0,\n    );\n  });\n  const tickOption = getTickOption(hasNegative, fixNegativeScale);\n  if (pluginOptions.axisId) {\n    setScaleOption(chartInstance, pluginOptions.axisId, !individual, tickOption);\n  } else {\n    [\"x\", \"y\"].forEach((axis) => {\n      setScaleOption(chartInstance, axis, !individual, axis === targetAxis ? tickOption : {});\n    });\n  }\n\n  // Replace tooltips\n  if (!replaceTooltipLabel) return;\n\n  chartInstance.options.plugins.tooltip.callbacks.label = tooltipLabel(\n    isHorizontal,\n    pluginOptions.axisId,\n  );\n};\n\nexport const beforeUpdate: ExtendedPlugin[\"beforeUpdate\"] = (\n  chartInstance,\n  _args,\n  pluginOptions,\n) => {\n  if (!pluginOptions.enable) return;\n\n  const data = chartInstance.data;\n\n  setOriginalData(data);\n  const visibles = data.datasets.map((dataset, i) =>\n    chartInstance.getDatasetMeta(i)?.hidden ?? dataset.hidden ? 0 : 1,\n  );\n  const precision = getPrecision(pluginOptions);\n  data.calculatedData = calculateRate(\n    data,\n    visibles,\n    isHorizontalChart(chartInstance),\n    precision,\n    pluginOptions.individual,\n    pluginOptions.roundOption,\n    pluginOptions.axisId,\n    chartInstance.options.parsing,\n  );\n  reflectData(data.calculatedData, data.datasets);\n};\n\nexport const afterUpdate: ExtendedPlugin[\"afterUpdate\"] = (chartInstance, _args, pluginOptions) => {\n  if (!pluginOptions.enable) return;\n\n  const data = chartInstance.data;\n\n  reflectData(data.originalData, data.datasets);\n};\n","import { beforeInit, beforeUpdate, afterUpdate } from \"./plugin\";\nexport * from \"./types\";\n\nconst ChartPluginStacked100 = {\n  id: \"stacked100\",\n  beforeInit,\n  beforeUpdate,\n  afterUpdate,\n};\n\nexport default ChartPluginStacked100;\n","import { Chart, ChartConfiguration, registerables } from \"chart.js\";\nimport ChartPluginStacked100 from \"../../src/index\";\n\nChart.register(...registerables, ChartPluginStacked100);\n\nconst COLORS = {\n  red: \"rgba(244, 143, 177, 0.6)\",\n  yellow: \"rgba(255, 235, 59, 0.6)\",\n  blue: \"rgba(100, 181, 246, 0.6)\",\n  green: \"rgba(51, 255, 74, 0.4)\",\n};\n\n// config: ChartConfiguration<\"bar\" | \"line\", DefaultDataPoint<\"bar\" | \"line\">, unknown>\nconst createChart = (title: string, config: ChartConfiguration): void => {\n  const container = document.createElement(\"div\");\n  container.className = \"my-chart-container\";\n  const header = document.createElement(\"h3\");\n  header.innerText = title;\n  container.appendChild(header);\n\n  const canvas = document.createElement(\"canvas\");\n  container.appendChild(canvas);\n\n  document.body.appendChild(container);\n\n  new Chart(canvas, config);\n};\n\ncreateChart(\"Case.1 basic pattern\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      { label: \"bad\", data: [5, 25], backgroundColor: COLORS.red },\n      { label: \"better\", data: [15, 10], backgroundColor: COLORS.yellow },\n      { label: \"good\", data: [10, 8], backgroundColor: COLORS.blue },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.2 stack group pattern\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      { label: \"L1\", stack: \"Stack 0\", data: [3, 2], backgroundColor: COLORS.red },\n      { label: \"L2\", stack: \"Stack 0\", data: [1, 1], backgroundColor: COLORS.yellow },\n      { label: \"L1\", stack: \"Stack 1\", data: [0, 3], backgroundColor: COLORS.blue },\n      { label: \"L2\", stack: \"Stack 1\", data: [1, 4], backgroundColor: COLORS.green },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.3 stacked vertical bar\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Hoge\", \"Fuga\"],\n    datasets: [\n      { label: \"L1\", data: [10, 9], backgroundColor: COLORS.red },\n      { label: \"L2\", data: [20, 6], backgroundColor: COLORS.yellow },\n      { label: \"L3\", data: [30, 3], backgroundColor: COLORS.blue },\n    ],\n  },\n  options: {\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.4 stacked area\", {\n  type: \"line\",\n  data: {\n    labels: [\"2017-10-18\", \"2017-10-19\", \"2017-10-20\"],\n    datasets: [\n      { label: \"L1\", fill: true, data: [1, 2, 0], backgroundColor: COLORS.red },\n      { label: \"L2\", fill: true, data: [1, 1, 3], backgroundColor: COLORS.yellow },\n      { label: \"L3\", fill: true, data: [1, 1, 2], backgroundColor: COLORS.blue },\n      { label: \"L4\", fill: true, data: [1, 3, 1], backgroundColor: COLORS.green },\n    ],\n  },\n  options: {\n    scales: {\n      x: { stacked: true },\n      y: { stacked: true },\n    },\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.5 stacked area with objects as data points\", {\n  type: \"line\",\n  data: {\n    labels: [\"2017-10-18\", \"2017-10-19\", \"2017-10-20\"],\n    datasets: [\n      {\n        label: \"L1\",\n        fill: true,\n        data: [\n          { x: \"2017-10-18\", y: 1 },\n          { x: \"2017-10-19\", y: 2 },\n          { x: \"2017-10-20\", y: 0 },\n        ],\n        backgroundColor: COLORS.red,\n      },\n      {\n        label: \"L2\",\n        fill: true,\n        data: [\n          { x: \"2017-10-18\", y: 1 },\n          { x: \"2017-10-19\", y: 1 },\n          { x: \"2017-10-20\", y: 3 },\n        ],\n        backgroundColor: COLORS.yellow,\n      },\n      {\n        label: \"L3\",\n        fill: true,\n        data: [\n          { x: \"2017-10-18\", y: 1 },\n          { x: \"2017-10-19\", y: 1 },\n          { x: \"2017-10-20\", y: 2 },\n        ],\n        backgroundColor: COLORS.blue,\n      },\n      {\n        label: \"L4\",\n        fill: true,\n        data: [\n          { x: \"2017-10-18\", y: 1 },\n          { x: \"2017-10-19\", y: 3 },\n          { x: \"2017-10-20\", y: 1 },\n        ],\n        backgroundColor: COLORS.green,\n      },\n    ] as any,\n  },\n  options: {\n    scales: {\n      x: { stacked: true },\n      y: { stacked: true },\n    },\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.6 horizontal bar chart with objects as data points\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      {\n        label: \"bad\",\n        data: [\n          { x: 5, y: \"Foo\" },\n          { x: 25, y: \"Bar\" },\n        ],\n        backgroundColor: COLORS.red,\n      },\n      {\n        label: \"better\",\n        data: [\n          { x: 15, y: \"Foo\" },\n          { x: 10, y: \"Bar\" },\n        ],\n        backgroundColor: COLORS.yellow,\n      },\n      {\n        label: \"good\",\n        data: [\n          { x: 10, y: \"Foo\" },\n          { x: 8, y: \"Bar\" },\n        ],\n        backgroundColor: COLORS.blue,\n      },\n    ] as any,\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.7 Negative values\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      { label: \"bad\", data: [-5, 25], backgroundColor: COLORS.red },\n      { label: \"better\", data: [15, -10], backgroundColor: COLORS.yellow },\n      { label: \"good\", data: [10, 8], backgroundColor: COLORS.blue },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: {\n      stacked100: { enable: true, fixNegativeScale: true },\n    },\n  },\n});\n\ncreateChart(\"Case.8 Different data length\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\", \"Baz\", \"Quuz\"],\n    datasets: [\n      { label: \"bad\", data: [-5, 25], backgroundColor: COLORS.red },\n      { label: \"better\", data: [15, -10, 6, 4], backgroundColor: COLORS.yellow },\n      { label: \"good\", data: [10, 8, 11], backgroundColor: COLORS.blue },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: {\n      stacked100: { enable: true, fixNegativeScale: true },\n    },\n  },\n});\n\ncreateChart(\"Case.9 Objects as data points with undefined value\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\", \"Baz\", \"Quuz\"],\n    datasets: [\n      {\n        label: \"bad\",\n        data: [\n          { x: 0, y: -5 },\n          { x: 1, y: 25 },\n          { x: 2, y: undefined },\n          { x: 3, y: undefined },\n        ],\n        backgroundColor: COLORS.red,\n      },\n      {\n        label: \"better\",\n        data: [\n          { x: 0, y: 15 },\n          { x: 1, y: -10 },\n          { x: 2, y: 6 },\n          { x: 3, y: 4 },\n        ],\n        backgroundColor: COLORS.yellow,\n      },\n      {\n        label: \"good\",\n        data: [\n          { x: 0, y: 10 },\n          { x: 1, y: 8 },\n          { x: 2, y: 11 },\n          { x: 3, y: undefined },\n        ],\n        backgroundColor: COLORS.blue,\n      },\n    ],\n  },\n  options: {\n    indexAxis: \"x\",\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.10 Relative percentage to maxium value\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      { label: \"bad\", data: [5, 25], backgroundColor: COLORS.red },\n      { label: \"better\", data: [15, 10], backgroundColor: COLORS.yellow },\n      { label: \"good\", data: [10, 8], backgroundColor: COLORS.blue },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: {\n      stacked100: { enable: true, individual: true },\n    },\n  },\n});\n\ncreateChart(\"Case.11 Relative percentage with stack\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      { label: \"L1\", stack: \"Stack 0\", data: [3, 2], backgroundColor: COLORS.red },\n      { label: \"L2\", stack: \"Stack 0\", data: [1, 1], backgroundColor: COLORS.yellow },\n      { label: \"L1\", stack: \"Stack 1\", data: [0, 3], backgroundColor: COLORS.blue },\n      { label: \"L2\", stack: \"Stack 1\", data: [1, 4], backgroundColor: COLORS.green },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: { stacked100: { enable: true, individual: true } },\n    scales: {\n      x: { stacked: true },\n      y: { stacked: true },\n    },\n  },\n});\n\ncreateChart(\"Case.12 Multiple axis(combo horizontal bar/line)\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      {\n        label: \"bad\",\n        data: [5, 25],\n        backgroundColor: COLORS.red,\n        xAxisID: \"axis1\",\n      },\n      {\n        label: \"better\",\n        data: [15, 10],\n        backgroundColor: COLORS.yellow,\n        xAxisID: \"axis1\",\n      },\n      {\n        type: \"line\",\n        label: \"good\",\n        data: [43, 24],\n        backgroundColor: COLORS.blue,\n        xAxisID: \"axis2\",\n      },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: { stacked100: { enable: true, axisId: \"axis1\" } },\n    scales: {\n      y: {\n        stacked: true,\n      },\n      axis1: {\n        position: \"top\",\n      },\n      axis2: {\n        position: \"bottom\",\n      },\n    },\n  },\n});\n\ncreateChart(\"Case.13 Multiple axis(combo vertical bar/line)\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      {\n        label: \"bad\",\n        data: [5, 25],\n        backgroundColor: COLORS.red,\n        yAxisID: \"axis1\",\n      },\n      {\n        label: \"better\",\n        data: [15, 10],\n        backgroundColor: COLORS.yellow,\n        yAxisID: \"axis1\",\n      },\n      {\n        type: \"line\",\n        label: \"good\",\n        data: [43, 24],\n        backgroundColor: COLORS.blue,\n        yAxisID: \"axis2\",\n      },\n    ],\n  },\n  options: {\n    plugins: { stacked100: { enable: true, axisId: \"axis1\" } },\n    scales: {\n      x: {\n        stacked: true,\n      },\n      axis1: {\n        position: \"left\",\n      },\n      axis2: {\n        position: \"right\",\n      },\n    },\n  },\n});\n\ncreateChart(\"Case.14 Multiple axis with stack(combo horizontal bar/line)\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      {\n        label: \"bad\",\n        data: [5, 25],\n        backgroundColor: COLORS.red,\n        stack: \"stack 0\",\n        xAxisID: \"axis1\",\n      },\n      {\n        label: \"better\",\n        data: [15, 10],\n        backgroundColor: COLORS.yellow,\n        stack: \"stack 0\",\n        xAxisID: \"axis1\",\n      },\n      {\n        label: \"good\",\n        data: [10, 20],\n        backgroundColor: COLORS.blue,\n        stack: \"stack 1\",\n        xAxisID: \"axis1\",\n      },\n      {\n        label: \"very good\",\n        data: [5, 24],\n        backgroundColor: COLORS.green,\n        stack: \"stack 1\",\n        xAxisID: \"axis1\",\n      },\n      {\n        type: \"line\",\n        label: \"L1\",\n        data: [43, 24],\n        xAxisID: \"axis2\",\n      },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: { stacked100: { enable: true, axisId: \"axis1\" } },\n    scales: {\n      axis1: {\n        position: \"top\",\n      },\n      axis2: {\n        position: \"bottom\",\n      },\n    },\n  },\n});\n\ncreateChart(\"Case.15 Multiple stacked axis with stack(combo vertical bar/line)\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      {\n        label: \"bad\",\n        data: [5, 25],\n        backgroundColor: COLORS.red,\n        stack: \"stack 0\",\n        yAxisID: \"axis1\",\n      },\n      {\n        label: \"better\",\n        data: [15, 10],\n        backgroundColor: COLORS.yellow,\n        stack: \"stack 0\",\n        yAxisID: \"axis1\",\n      },\n      {\n        label: \"good\",\n        data: [10, 20],\n        backgroundColor: COLORS.blue,\n        stack: \"stack 1\",\n        yAxisID: \"axis1\",\n      },\n      {\n        label: \"very good\",\n        data: [5, 24],\n        backgroundColor: COLORS.green,\n        stack: \"stack 1\",\n        yAxisID: \"axis1\",\n      },\n      {\n        type: \"line\",\n        label: \"L1\",\n        data: [43, 24],\n        yAxisID: \"axis2\",\n      },\n    ],\n  },\n  options: {\n    plugins: { stacked100: { enable: true, axisId: \"axis1\" } },\n    scales: {\n      axis1: {\n        position: \"left\",\n      },\n      axis2: {\n        position: \"right\",\n      },\n    },\n  },\n});\n\ncreateChart(\"Case.16 horizontal bar chart with parsing option\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      {\n        label: \"bad\",\n        data: [\n          { foo: 5, bar: \"Foo\" },\n          { foo: 25, bar: \"Bar\" },\n        ],\n        backgroundColor: COLORS.red,\n      },\n      {\n        label: \"better\",\n        data: [\n          { foo: 15, bar: \"Foo\" },\n          { foo: 10, bar: \"Bar\" },\n        ],\n        backgroundColor: COLORS.yellow,\n      },\n      {\n        label: \"good\",\n        data: [\n          { foo2: 10, bar2: \"Foo\" },\n          { foo2: 8, bar2: \"Bar\" },\n        ],\n        parsing: { xAxisKey: \"foo2\", yAxisKey: \"bar2\" },\n        backgroundColor: COLORS.blue,\n      },\n    ] as any,\n  },\n  options: {\n    indexAxis: \"y\",\n    parsing: { xAxisKey: \"foo\", yAxisKey: \"bar\" },\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.17 Complex parsing options\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Alice\", \"Bob\"],\n    datasets: [\n      {\n        label: \"bad\",\n        data: [{ count: 1, user: \"Alice\" }],\n        backgroundColor: COLORS.red,\n        parsing: {\n          xAxisKey: \"user\",\n          yAxisKey: \"count\",\n        },\n      },\n      {\n        label: \"better\",\n        data: [{ count: 2, user: \"Bob\" }],\n        backgroundColor: COLORS.yellow,\n        parsing: {\n          xAxisKey: \"user\",\n          yAxisKey: \"count\",\n        },\n      },\n      {\n        label: \"good\",\n        data: [\n          { count: 3, user: \"Alice\" },\n          { count: 1, user: \"Bob\" },\n        ],\n        backgroundColor: COLORS.blue,\n        parsing: {\n          xAxisKey: \"user\",\n          yAxisKey: \"count\",\n        },\n      },\n    ],\n  },\n  options: {\n    plugins: {\n      stacked100: {\n        enable: true,\n      },\n    },\n  },\n} as any);\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","r","g","hueValue","calln","Array","isArray","map","hsl2rgb","hue","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","Object","assign","fromObject","input","length","functionParse","str","charAt","m","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","type","ret","len","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","nameParse","this","_rgb","_valid","valid","obj","rgbString","undefined","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","segments","sub","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","aspectRatio","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","fullCircles","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","angleMargin","clipArc","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","dataValue","dataPoint","axisKey","defaultKey","getAxisKey","setOriginalData","originalData","roundOff","multiplicator","roundDown","roundUp","defaultStackKey","getDataIndex","srcIndex","parseKey","labelIndex","isTargetDataset","targetAxisId","calculateRate","visibles","individual","roundOption","totals","chartData","datasetDataLength","isStack","sum","parsingOptions","rec","ds","maxVal","summarizeValues","isTarget","dv","reflectData","srcData","isHorizontalChart","chartInstance","setScaleOption","axisId","tickOption","scaleOption","ChartPluginStacked100","beforeInit","pluginOptions","enable","replaceTooltipLabel","fixNegativeScale","targetAxis","hasNegative","baseOption","getTickOption","datasetLabel","originalValue","rateValue","calculatedData","tooltipLabel","optionsPrecision","getPrecision","COLORS","createChart","createElement","className","header","innerText","appendChild","stacked100","axis1","axis2","foo","foo2","bar2","user"],"sourceRoot":""}